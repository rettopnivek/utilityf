% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{formatNumber}
\alias{formatNumber}
\title{Convert Number to Nicely Formatted Character String}
\usage{
formatNumber(x, decimals = 1, begin = "", end = "", pad_left = NULL)
}
\arguments{
\item{x}{A numeric value.}

\item{decimals}{The number of decimal places to round to.}

\item{begin}{An optional character string to add to
the beginning of the output after formatting (e.g., '+', '~').}

\item{end}{An optional character string to add to
the end of the output after formatting (e.g., '\%').}

\item{pad_left}{Pads the output to a minimum number
of charactesr by adding spaces to the left.}
}
\value{
A character string, a formatted number.
}
\description{
Provides several options to round, pad, and adjust
a number to create a nicely formtted character string.
Useful to ensuring matching character lengths to
produce aligned values in a table.
}
\examples{
# Default
print( format_numbers( 4.392 ) )
# Rounding
print( format_numbers( 4.392, decimals = 2 ) )
# Trailing zeros
print( format_numbers( 4, decimals = 1 ) )
# Adding units
print( format_numbers( 4.4, end = '\%' ) )
# Adding leading symbols
print( format_numbers( 4.4, begin = '+' ) )
# Padding left side
print( format_numbers( 4.4, width = 2 ) )
# Negative numbers
print( format_numbers( -.4 ) )
# Rounds to zero and pads appropriately
print( format_numbers( -.01 ) )
print( format_numbers( -.01, decimals = 0 ) )

}
